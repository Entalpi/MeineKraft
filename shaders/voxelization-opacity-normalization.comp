
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

// NOTE: (radiance, atomic_counter) --> (radiance, opacity)
layout(R32UI) uniform coherent volatile uimage3D voxels_in;
layout(RGBA8) uniform coherent volatile  image3D voxels_out;

void main() {
  const ivec3 vpos = ivec3(gl_GlobalInvocationID.xyz); 
  const uint raw = uint(imageLoad(voxels_in, vpos));
  vec4 value = unpackUnorm4x8(raw);
  if (value.a > 0.0f) {
    value.a = 1.0f;
  } else {
    value.a = 0.0f;
  }
  imageStore(voxels_out, vpos, value);
}
